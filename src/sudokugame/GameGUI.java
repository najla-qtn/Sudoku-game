/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sudokugame;

import java.awt.Color;
import javax.swing.BoxLayout;
import javax.swing.JPanel;
import javax.swing.JTextField;

/**
 *
 * @author Tshi
 */
public class GameGUI extends javax.swing.JFrame {

    /**
     * Creates new form GameGUI
     */
    
    private int numOfCell; // e.g. 6 => 6x6 => 3x2
    private int firstNum; // e.g. 3 must be num of row 
    private int secondNum; // e.g. 2 must be num of col
    
    private JPanel[] outerPanel; // spreate into X rows
    private JTextField[] innerTexFiel; // fill outerPanel with textfield 
    
    public GameGUI(int firstNum, int secondNum) {
        numOfCell = firstNum * secondNum; // found how many region it is? (e.g. 3x2 = 6)
        if(firstNum > secondNum){ // the biggest num must be row and the smollest num must be col
            this.firstNum = firstNum; 
            this.secondNum = secondNum; 
        }else{
            this.firstNum = secondNum; 
            this.secondNum = firstNum; 
        }
        
        
        initComponents();
        init_outer_panle();
        init_text_field_in_outer_panle();
    }

    private void init_outer_panle(){
        outerPanel = new JPanel[numOfCell];
        
        for (int i = 0; i < outerPanel.length; i++) { // determine the characteristic of outer panel
            outerPanel[i] = new JPanel();
            outerPanel[i].setLayout(new BoxLayout(outerPanel[i], BoxLayout.X_AXIS)); // virtecal componant
            outerPanel[i].setOpaque(false);
            pan_gamePad.add(outerPanel[i]);
        }
    }
    
    private void init_text_field_in_outer_panle(){
        innerTexFiel = new JTextField[numOfCell*numOfCell]; // determain how many text field
        
        for (int i = 0; i < innerTexFiel.length; i++) { // init all text field
            innerTexFiel[i] = new JTextField();
            innerTexFiel[i].setHorizontalAlignment(javax.swing.JTextField.CENTER);
        }
        
        int text_fiel_assigen_to_panle = 0; // add all text field to panle
        for (int i = 0; i < numOfCell; i++) {
            for (int j = 0; j < numOfCell; j++) {
                outerPanel[i].add(innerTexFiel[text_fiel_assigen_to_panle++]);
            }
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        border = new javax.swing.JLabel();
        pan_gamePad = new javax.swing.JPanel();
        butt_check = new javax.swing.JButton();
        butt_clear = new javax.swing.JButton();
        butt_exit = new javax.swing.JButton();
        butt_help = new javax.swing.JButton();
        lab_time = new javax.swing.JLabel();
        tex_time = new javax.swing.JTextField();
        lab_points = new javax.swing.JLabel();
        tex_points = new javax.swing.JTextField();
        lab_name = new javax.swing.JLabel();
        tex_name = new javax.swing.JTextField();
        lab_level = new javax.swing.JLabel();
        tex_level = new javax.swing.JTextField();
        background = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Sudoku");
        getContentPane().setLayout(null);

        border.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/bord.png"))); // NOI18N
        border.setText("jLabel1");
        getContentPane().add(border);
        border.setBounds(10, 50, 330, 240);

        pan_gamePad.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        pan_gamePad.setOpaque(false);
        pan_gamePad.setLayout(new javax.swing.BoxLayout(pan_gamePad, javax.swing.BoxLayout.Y_AXIS));
        getContentPane().add(pan_gamePad);
        pan_gamePad.setBounds(10, 50, 330, 240);

        butt_check.setText("Check");
        butt_check.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butt_checkActionPerformed(evt);
            }
        });
        getContentPane().add(butt_check);
        butt_check.setBounds(10, 300, 110, 23);

        butt_clear.setText("Clear");
        getContentPane().add(butt_clear);
        butt_clear.setBounds(230, 300, 110, 23);

        butt_exit.setText("Exit");
        butt_exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butt_exitActionPerformed(evt);
            }
        });
        getContentPane().add(butt_exit);
        butt_exit.setBounds(230, 330, 110, 23);

        butt_help.setText("Help");
        getContentPane().add(butt_help);
        butt_help.setBounds(10, 330, 110, 23);

        lab_time.setText("Time:");
        getContentPane().add(lab_time);
        lab_time.setBounds(350, 70, 60, 14);

        tex_time.setEditable(false);
        tex_time.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        tex_time.setText("00:00");
        tex_time.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tex_timeActionPerformed(evt);
            }
        });
        getContentPane().add(tex_time);
        tex_time.setBounds(350, 90, 60, 20);

        lab_points.setText("Help points:");
        getContentPane().add(lab_points);
        lab_points.setBounds(350, 130, 90, 14);

        tex_points.setEditable(false);
        tex_points.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        tex_points.setText("3");
        getContentPane().add(tex_points);
        tex_points.setBounds(350, 150, 60, 20);

        lab_name.setText("User name:");
        getContentPane().add(lab_name);
        lab_name.setBounds(5, 20, 70, 23);

        tex_name.setEditable(false);
        getContentPane().add(tex_name);
        tex_name.setBounds(80, 20, 130, 20);

        lab_level.setText("User level:");
        getContentPane().add(lab_level);
        lab_level.setBounds(230, 20, 80, 23);

        tex_level.setEditable(false);
        getContentPane().add(tex_level);
        tex_level.setBounds(300, 20, 40, 20);

        background.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/pazzel.jpg"))); // NOI18N
        background.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        getContentPane().add(background);
        background.setBounds(0, 0, 400, 380);

        setBounds(0, 0, 440, 399);
    }// </editor-fold>//GEN-END:initComponents

    private void butt_exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butt_exitActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_butt_exitActionPerformed

    private void tex_timeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tex_timeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tex_timeActionPerformed

    private void butt_checkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butt_checkActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_butt_checkActionPerformed

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(GameGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(GameGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(GameGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(GameGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new GameGUI().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel background;
    private javax.swing.JLabel border;
    private javax.swing.JButton butt_check;
    private javax.swing.JButton butt_clear;
    private javax.swing.JButton butt_exit;
    private javax.swing.JButton butt_help;
    private javax.swing.JLabel lab_level;
    private javax.swing.JLabel lab_name;
    private javax.swing.JLabel lab_points;
    private javax.swing.JLabel lab_time;
    private javax.swing.JPanel pan_gamePad;
    private javax.swing.JTextField tex_level;
    private javax.swing.JTextField tex_name;
    private javax.swing.JTextField tex_points;
    private javax.swing.JTextField tex_time;
    // End of variables declaration//GEN-END:variables
}
